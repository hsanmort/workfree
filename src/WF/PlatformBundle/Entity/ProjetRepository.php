<?php

namespace WF\PlatformBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;


/**
 * ProjetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProjetRepository extends EntityRepository
{
	
	public function getAllProjets($page,$nbPerPage)
	{
		$em=$this->getEntityManager();
		$query = $em->createQuery(
		    'SELECT p
		    FROM WFPlatformBundle:Projet p
		    WHERE p.published = true
		    ORDER BY p.dateDebut DESC')
//			->getQuery()
			;
			$query
				->setFirstResult(($page-1)*$nbPerPage)
				->setMaxResults($nbPerPage)
				;

			return new Paginator($query,true) ;
    }
    
    public function getProjets($page,$nbPerPage)
	{
		$query = $this->createQueryBuilder('p')
		
		    ->Join('p.categorie', 'c')
		    ->addSelect('c')
			->orderBy('p.dateDebut','DESC')
			->getQuery()
			;
			$query
				->setFirstResult(($page-1)*$nbPerPage)
				->setMaxResults($nbPerPage)
				;

			return new Paginator($query,true) ;
    }
    public function getProjetWithCategories(array $categoryNames)
	  {
	    $qb = $this->createQueryBuilder('p');

	    $qb
	      ->join('p.categorie', 'c')
	      ->addSelect('c')
	    ;
	    $qb->where($qb->expr()->in('c.com_cat', $categoryNames));
	    return $qb
	      ->getQuery()
	      ->getResult()
	    ;
	  }
	   public function getUserWithProjet($limit)
	  {
	    $qb = $this->createQueryBuilder('p');

	    $qb
	      ->join('p.projet', 'pro')
	      ->addSelect('pro')
	    ;

	    $qb->setMaxResults($limit);

	    return $qb
	      ->getQuery()
	      ->getResult()
	      ;
	  }
	  public function getPublishedQueryBuilder()
  {
    return $this
      ->createQueryBuilder('p')
      ->where('p.published = :published')
      ->setParameter('published', true)
    ;
  }
  public function getProjetOfUser($uId)
    {
		$em = $this->getEntityManager();
		$query = $em->createQuery(
		'SELECT p
		FROM WFPlatformBundle:Projet p
		WHERE p.client = :uId'
		)->setParameter('uId', $uId);

		$projets = $query->getResult();
		return $projets;
    }
	
}
